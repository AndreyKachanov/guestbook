/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0): util.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Util = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Private TransitionEnd Helpers
   * ------------------------------------------------------------------------
   */
  var transition = false;
  var MAX_UID = 1000000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)

  function toType(obj) {
    return {}.toString.call(obj).match(/\s([a-zA-Z]+)/)[1].toLowerCase();
  }

  function getSpecialTransitionEndEvent() {
    return {
      bindType: transition.end,
      delegateType: transition.end,
      handle: function handle(event) {
        if ($(event.target).is(this)) {
          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params
        }

        return undefined; // eslint-disable-line no-undefined
      }
    };
  }

  function transitionEndTest() {
    if (typeof window !== 'undefined' && window.QUnit) {
      return false;
    }

    return {
      end: 'transitionend'
    };
  }

  function transitionEndEmulator(duration) {
    var _this = this;

    var called = false;
    $(this).one(Util.TRANSITION_END, function () {
      called = true;
    });
    setTimeout(function () {
      if (!called) {
        Util.triggerTransitionEnd(_this);
      }
    }, duration);
    return this;
  }

  function setTransitionEndSupport() {
    transition = transitionEndTest();
    $.fn.emulateTransitionEnd = transitionEndEmulator;

    if (Util.supportsTransitionEnd()) {
      $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();
    }
  }

  function escapeId(selector) {
    // We escape IDs in case of special selectors (selector = '#myId:something')
    // $.escapeSelector does not exist in jQuery < 3
    selector = typeof $.escapeSelector === 'function' ? $.escapeSelector(selector).substr(1) : selector.replace(/(:|\.|\[|\]|,|=|@)/g, '\\$1');
    return selector;
  }
  /**
   * --------------------------------------------------------------------------
   * Public Util Api
   * --------------------------------------------------------------------------
   */


  var Util = {
    TRANSITION_END: 'bsTransitionEnd',
    getUID: function getUID(prefix) {
      do {
        // eslint-disable-next-line no-bitwise
        prefix += ~~(Math.random() * MAX_UID); // "~~" acts like a faster Math.floor() here
      } while (document.getElementById(prefix));

      return prefix;
    },
    getSelectorFromElement: function getSelectorFromElement(element) {
      var selector = element.getAttribute('data-target');

      if (!selector || selector === '#') {
        selector = element.getAttribute('href') || '';
      } // If it's an ID


      if (selector.charAt(0) === '#') {
        selector = escapeId(selector);
      }

      try {
        var $selector = $(document).find(selector);
        return $selector.length > 0 ? selector : null;
      } catch (err) {
        return null;
      }
    },
    reflow: function reflow(element) {
      return element.offsetHeight;
    },
    triggerTransitionEnd: function triggerTransitionEnd(element) {
      $(element).trigger(transition.end);
    },
    supportsTransitionEnd: function supportsTransitionEnd() {
      return Boolean(transition);
    },
    isElement: function isElement(obj) {
      return (obj[0] || obj).nodeType;
    },
    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {
      for (var property in configTypes) {
        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {
          var expectedTypes = configTypes[property];
          var value = config[property];
          var valueType = value && Util.isElement(value) ? 'element' : toType(value);

          if (!new RegExp(expectedTypes).test(valueType)) {
            throw new Error(componentName.toUpperCase() + ": " + ("Option \"" + property + "\" provided type \"" + valueType + "\" ") + ("but expected type \"" + expectedTypes + "\"."));
          }
        }
      }
    }
  };
  setTransitionEndSupport();
  return Util;
}($);
//# sourceMappingURL=util.js.map
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

/**
 * --------------------------------------------------------------------------
 * Bootstrap (v4.0.0): collapse.js
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 * --------------------------------------------------------------------------
 */
var Collapse = function ($) {
  /**
   * ------------------------------------------------------------------------
   * Constants
   * ------------------------------------------------------------------------
   */
  var NAME = 'collapse';
  var VERSION = '4.0.0';
  var DATA_KEY = 'bs.collapse';
  var EVENT_KEY = "." + DATA_KEY;
  var DATA_API_KEY = '.data-api';
  var JQUERY_NO_CONFLICT = $.fn[NAME];
  var TRANSITION_DURATION = 600;
  var Default = {
    toggle: true,
    parent: ''
  };
  var DefaultType = {
    toggle: 'boolean',
    parent: '(string|element)'
  };
  var Event = {
    SHOW: "show" + EVENT_KEY,
    SHOWN: "shown" + EVENT_KEY,
    HIDE: "hide" + EVENT_KEY,
    HIDDEN: "hidden" + EVENT_KEY,
    CLICK_DATA_API: "click" + EVENT_KEY + DATA_API_KEY
  };
  var ClassName = {
    SHOW: 'show',
    COLLAPSE: 'collapse',
    COLLAPSING: 'collapsing',
    COLLAPSED: 'collapsed'
  };
  var Dimension = {
    WIDTH: 'width',
    HEIGHT: 'height'
  };
  var Selector = {
    ACTIVES: '.show, .collapsing',
    DATA_TOGGLE: '[data-toggle="collapse"]'
    /**
     * ------------------------------------------------------------------------
     * Class Definition
     * ------------------------------------------------------------------------
     */

  };

  var Collapse =
  /*#__PURE__*/
  function () {
    function Collapse(element, config) {
      this._isTransitioning = false;
      this._element = element;
      this._config = this._getConfig(config);
      this._triggerArray = $.makeArray($("[data-toggle=\"collapse\"][href=\"#" + element.id + "\"]," + ("[data-toggle=\"collapse\"][data-target=\"#" + element.id + "\"]")));
      var tabToggles = $(Selector.DATA_TOGGLE);

      for (var i = 0; i < tabToggles.length; i++) {
        var elem = tabToggles[i];
        var selector = Util.getSelectorFromElement(elem);

        if (selector !== null && $(selector).filter(element).length > 0) {
          this._selector = selector;

          this._triggerArray.push(elem);
        }
      }

      this._parent = this._config.parent ? this._getParent() : null;

      if (!this._config.parent) {
        this._addAriaAndCollapsedClass(this._element, this._triggerArray);
      }

      if (this._config.toggle) {
        this.toggle();
      }
    } // Getters


    var _proto = Collapse.prototype;

    // Public
    _proto.toggle = function toggle() {
      if ($(this._element).hasClass(ClassName.SHOW)) {
        this.hide();
      } else {
        this.show();
      }
    };

    _proto.show = function show() {
      var _this = this;

      if (this._isTransitioning || $(this._element).hasClass(ClassName.SHOW)) {
        return;
      }

      var actives;
      var activesData;

      if (this._parent) {
        actives = $.makeArray($(this._parent).find(Selector.ACTIVES).filter("[data-parent=\"" + this._config.parent + "\"]"));

        if (actives.length === 0) {
          actives = null;
        }
      }

      if (actives) {
        activesData = $(actives).not(this._selector).data(DATA_KEY);

        if (activesData && activesData._isTransitioning) {
          return;
        }
      }

      var startEvent = $.Event(Event.SHOW);
      $(this._element).trigger(startEvent);

      if (startEvent.isDefaultPrevented()) {
        return;
      }

      if (actives) {
        Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide');

        if (!activesData) {
          $(actives).data(DATA_KEY, null);
        }
      }

      var dimension = this._getDimension();

      $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);
      this._element.style[dimension] = 0;

      if (this._triggerArray.length > 0) {
        $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);
      }

      this.setTransitioning(true);

      var complete = function complete() {
        $(_this._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.SHOW);
        _this._element.style[dimension] = '';

        _this.setTransitioning(false);

        $(_this._element).trigger(Event.SHOWN);
      };

      if (!Util.supportsTransitionEnd()) {
        complete();
        return;
      }

      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);
      var scrollSize = "scroll" + capitalizedDimension;
      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);
      this._element.style[dimension] = this._element[scrollSize] + "px";
    };

    _proto.hide = function hide() {
      var _this2 = this;

      if (this._isTransitioning || !$(this._element).hasClass(ClassName.SHOW)) {
        return;
      }

      var startEvent = $.Event(Event.HIDE);
      $(this._element).trigger(startEvent);

      if (startEvent.isDefaultPrevented()) {
        return;
      }

      var dimension = this._getDimension();

      this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + "px";
      Util.reflow(this._element);
      $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.SHOW);

      if (this._triggerArray.length > 0) {
        for (var i = 0; i < this._triggerArray.length; i++) {
          var trigger = this._triggerArray[i];
          var selector = Util.getSelectorFromElement(trigger);

          if (selector !== null) {
            var $elem = $(selector);

            if (!$elem.hasClass(ClassName.SHOW)) {
              $(trigger).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);
            }
          }
        }
      }

      this.setTransitioning(true);

      var complete = function complete() {
        _this2.setTransitioning(false);

        $(_this2._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);
      };

      this._element.style[dimension] = '';

      if (!Util.supportsTransitionEnd()) {
        complete();
        return;
      }

      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);
    };

    _proto.setTransitioning = function setTransitioning(isTransitioning) {
      this._isTransitioning = isTransitioning;
    };

    _proto.dispose = function dispose() {
      $.removeData(this._element, DATA_KEY);
      this._config = null;
      this._parent = null;
      this._element = null;
      this._triggerArray = null;
      this._isTransitioning = null;
    }; // Private


    _proto._getConfig = function _getConfig(config) {
      config = _extends({}, Default, config);
      config.toggle = Boolean(config.toggle); // Coerce string values

      Util.typeCheckConfig(NAME, config, DefaultType);
      return config;
    };

    _proto._getDimension = function _getDimension() {
      var hasWidth = $(this._element).hasClass(Dimension.WIDTH);
      return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;
    };

    _proto._getParent = function _getParent() {
      var _this3 = this;

      var parent = null;

      if (Util.isElement(this._config.parent)) {
        parent = this._config.parent; // It's a jQuery object

        if (typeof this._config.parent.jquery !== 'undefined') {
          parent = this._config.parent[0];
        }
      } else {
        parent = $(this._config.parent)[0];
      }

      var selector = "[data-toggle=\"collapse\"][data-parent=\"" + this._config.parent + "\"]";
      $(parent).find(selector).each(function (i, element) {
        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);
      });
      return parent;
    };

    _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {
      if (element) {
        var isOpen = $(element).hasClass(ClassName.SHOW);

        if (triggerArray.length > 0) {
          $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);
        }
      }
    }; // Static


    Collapse._getTargetFromElement = function _getTargetFromElement(element) {
      var selector = Util.getSelectorFromElement(element);
      return selector ? $(selector)[0] : null;
    };

    Collapse._jQueryInterface = function _jQueryInterface(config) {
      return this.each(function () {
        var $this = $(this);
        var data = $this.data(DATA_KEY);

        var _config = _extends({}, Default, $this.data(), typeof config === 'object' && config);

        if (!data && _config.toggle && /show|hide/.test(config)) {
          _config.toggle = false;
        }

        if (!data) {
          data = new Collapse(this, _config);
          $this.data(DATA_KEY, data);
        }

        if (typeof config === 'string') {
          if (typeof data[config] === 'undefined') {
            throw new TypeError("No method named \"" + config + "\"");
          }

          data[config]();
        }
      });
    };

    _createClass(Collapse, null, [{
      key: "VERSION",
      get: function get() {
        return VERSION;
      }
    }, {
      key: "Default",
      get: function get() {
        return Default;
      }
    }]);

    return Collapse;
  }();
  /**
   * ------------------------------------------------------------------------
   * Data Api implementation
   * ------------------------------------------------------------------------
   */


  $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {
    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element
    if (event.currentTarget.tagName === 'A') {
      event.preventDefault();
    }

    var $trigger = $(this);
    var selector = Util.getSelectorFromElement(this);
    $(selector).each(function () {
      var $target = $(this);
      var data = $target.data(DATA_KEY);
      var config = data ? 'toggle' : $trigger.data();

      Collapse._jQueryInterface.call($target, config);
    });
  });
  /**
   * ------------------------------------------------------------------------
   * jQuery
   * ------------------------------------------------------------------------
   */

  $.fn[NAME] = Collapse._jQueryInterface;
  $.fn[NAME].Constructor = Collapse;

  $.fn[NAME].noConflict = function () {
    $.fn[NAME] = JQUERY_NO_CONFLICT;
    return Collapse._jQueryInterface;
  };

  return Collapse;
}($);
//# sourceMappingURL=collapse.js.map
function showModal(a){$("#cart .modal-body").html(a);var e=$("#image").attr("src");$("#img_modal").attr("src",e),$("#cart").modal()}function readURL(a){var e=new FileReader;e.onload=function(a){$("#image").attr("src",a.target.result)},e.readAsDataURL(a.files[0])}function isValidName(a){return new RegExp(/^[a-zA-Z0-9]{3,20}$/).test(a)}function isValidEmail(a){return new RegExp(/^[-._a-z0-9]+@(?:[a-z0-9][-a-z0-9]+\.)+[a-z]{2,6}$/).test(a)}function isValidContentCkeditor(a){if(a.length>0&&a.length<300)return!0}function isValidUrl(a){return new RegExp(/https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/).test(a)}function isValidCaptcha(a,e){var s=e||function(){};$.ajax({type:"POST",url:"/messages/captcha/",dataType:"json",data:{captcha:a},success:function(a){s(a)},error:function(a,e,s){alert(a.status),alert(s)}})}$(document).ready(function(){CKEDITOR.config.autoParagraph=!1,$('<button id="cap" type="button" class="btn btn-outline-secondary"><i class="fa fa-refresh" aria-hidden="true"></i></button>').appendTo("#append").click(function(){$("#captcha_reload").attr("src","/imgcaptcha.php?"+Math.random())}),$("#myTable").tablesorter({selectorHeaders:"thead th.sortable"}),$("#imgInput").change(function(){readURL(this)}),$("#buttonPreview").on("click",function(){$("#panel-heading").html(""),$("#panel-heading").removeClass("succ-good"),$("#panel-heading").removeClass("succ-error"),$("input").removeClass("is-invalid"),$("#cke_content").css("border","none"),$("#ckedit").css("display","none").html(""),$("#captcha").next().css("display","none").html("");var a=!1,e=$("#author").val();isValidName(e)?($("#author").removeClass("is-invalid"),$("#author").next().css("display","none").html("")):($("#author").addClass("is-invalid"),$("#author").next().css("display","block").html("В поле Имя должно быть от 3 до 10 латинских символы и цифр."),a=!0);var s=$("#email").val();isValidEmail(s)?($("#email").removeClass("is-invalid"),$("#email").next().css("display","none").html("")):($("#email").addClass("is-invalid"),$("#email").next().css("display","block").html("Введите корректный email адрес."),a=!0);var t=$("#homepage").val();if(t?isValidUrl(t)?($("#homepage").removeClass("is-invalid"),$("#homepage").next().css("display","none").html("")):($("#homepage").addClass("is-invalid"),$("#homepage").next().css("display","block").html("В поле Домашняя страница впишите правильный url адрес"),a=!0):($("#homepage").removeClass("is-invalid"),$("#homepage").next().css("display","none").html("")),!a){var l=!1;if(c=$("#imgInput").val()){var i=$("#imgInput")[0].files[0].size,n=c.split(".").pop();"txt"==n?i>102400&&($("#panel-heading").removeClass("succ-good").addClass("succ-error").html("<p>Размер txt файла не должен превышать 100 Кб.</p>"),l=!0):"jpg"==n||"png"==n||"gif"==n?i>5242880&&($("#panel-heading").removeClass("succ-good").addClass("succ-error").html("<p>Размер изображения не должен превышать 5 Мб.</p>"),l=!0):($("#panel-heading").removeClass("succ-good").addClass("succ-error").html("<p>Не верный тип файла (допустимые форматы jpg, png, gif, txt).</p>"),l=!0)}if(!l){var o=new FormData;if(c){var c,r=(c=$(document).find('input[type="file"]'))[0].files[0];o.append("file",r)}o.append("name",e),o.append("email",s),o.append("text",content),t&&o.append("url",t),$.ajax({type:"POST",url:"/messages/preview/",data:o,cache:!1,contentType:!1,processData:!1,success:function(a){a||alert("Ошибка"),showModal(a)},error:function(a,e,s){alert(a.status),alert(s)}})}}}),$("#form_task").submit(function(){$("#panel-heading").html(""),$("#panel-heading").removeClass("succ-good"),$("#panel-heading").removeClass("succ-error");var a=!1,e=$("#author").val();isValidName(e)?($("#author").removeClass("is-invalid"),$("#author").next().css("display","none").html("")):($("#author").addClass("is-invalid"),$("#author").next().css("display","block").html("В поле Имя должно быть от 3 до 10 латинских символы и цифр."),a=!0);var s=$("#email").val();isValidEmail(s)?($("#email").removeClass("is-invalid"),$("#email").next().css("display","none").html("")):($("#email").addClass("is-invalid"),$("#email").next().css("display","block").html("Введите корректный email адрес."),a=!0);var t=CKEDITOR.instances.content.getData();isValidContentCkeditor(t)?($("#cke_content").css("border","none"),$("#ckedit").css("display","block").html("")):($("#cke_content").css("border","1px solid red"),$("#ckedit").css("display","block").html("Сообщение должно иметь от 1 до 300 символов."),a=!0);var l=$("#homepage").val();l?isValidUrl(l)?($("#homepage").removeClass("is-invalid"),$("#homepage").next().css("display","none").html("")):($("#homepage").addClass("is-invalid"),$("#homepage").next().css("display","block").html("В поле Домашняя страница впишите правильный url адрес"),a=!0):($("#homepage").removeClass("is-invalid"),$("#homepage").next().css("display","none").html(""));var i=$("#captcha").val();return""==i?(a=!0,$("#captcha").addClass("is-invalid"),$("#captcha").next().css("display","block").html("Введите код капчи.")):isValidCaptcha(i,function(i){if("bad"==i.type)$("#captcha").addClass("is-invalid"),$("#captcha").next().css("display","block").html("Неверный код капчи.");else if($("#captcha").removeClass("is-invalid"),$("#captcha").next().css("display","none").next().empty(),!a){var n=!1;if(d=$("#imgInput").val()){var o=$("#imgInput")[0].files[0].size,c=d.split(".").pop();"txt"==c?o>102400&&($("#panel-heading").removeClass("succ-good").addClass("succ-error").html("<p>Размер txt файла не должен превышать 100 Кб.</p>"),n=!0):"jpg"==c||"png"==c||"gif"==c?o>5242880&&($("#panel-heading").removeClass("succ-good").addClass("succ-error").html("<p>Размер изображения не должен превышать 5 Мб.</p>"),n=!0):($("#panel-heading").removeClass("succ-good").addClass("succ-error").html("<p>Не верный тип файла (допустимые форматы jpg, png, gif, txt).</p>"),n=!0)}if(!n){var r=new FormData;if(d){var d,p=(d=$(document).find('input[type="file"]'))[0].files[0];r.append("file",p)}r.append("name",e),r.append("email",s),r.append("text",t),l&&r.append("url",l),$.ajax({type:"POST",url:"/messages/ajax_add/",data:r,dataType:"json",cache:!1,contentType:!1,processData:!1,success:function(a){"good"==a.type?($("#form_task").trigger("reset"),CKEDITOR.instances.content.setData(""),$("#image").attr("src","#"),$("#panel-heading").removeClass("succ-error").addClass("succ-good").html("<p>Сообщение удачно отправлено.</p>"),$("#captcha_reload").attr("src","/imgcaptcha.php?"+Math.random())):$("#panel-heading").removeClass("succ-good").addClass("succ-error").html("<p>Ошибка отправки сообщения.</p>")},error:function(a,e,s){alert(a.status),alert(s)}})}}}),!1})});